rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can access their own user data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Family invitations - authenticated users can create and read
    match /invitations/{invitationId} {
      allow read, write, create: if request.auth != null;
    }
    
    // Family-based access control
    match /families/{familyId} {
      // Allow creation of new families by authenticated users
      allow create: if request.auth != null;
      
      // Allow reading if user is a member
      allow read: if request.auth != null && 
        request.auth.uid in resource.data.members;
      
      // Allow writing if user is a member (either in existing data or new data)
      allow update: if request.auth != null && 
        (request.auth.uid in resource.data.members || 
         request.auth.uid in request.resource.data.members);
      
      // Allow delete if user is a member
      allow delete: if request.auth != null && 
        request.auth.uid in resource.data.members;
      
      // Nested collections within families
      match /{document=**} {
        allow read, write, create, delete: if request.auth != null;
      }
    }
    
    // Projects - authenticated users can create and manage
    match /projects/{projectId} {
      allow read, write, create: if request.auth != null;
      
      // Project members subcollection
      match /members/{memberId} {
        allow read, write, create: if request.auth != null;
      }
      
      // All nested collections within projects (phases, lists, tasks, etc.)
      match /{document=**} {
        allow read, write, create, delete: if request.auth != null;
      }
    }
    
    // Tasks and related collections - authenticated users can manage
    match /{path=**}/tasks/{taskId} {
      allow read, write, create: if request.auth != null;
    }
    
    match /{path=**}/taskLists/{taskListId} {
      allow read, write, create: if request.auth != null;
    }
    
    match /{path=**}/phases/{phaseId} {
      allow read, write, create: if request.auth != null;
    }
  }
}